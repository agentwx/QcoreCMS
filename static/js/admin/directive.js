// Generated by CoffeeScript 1.6.3
(function() {
  define(['jQuery', 'admin/app', 'bootstrap'], function($, app) {
    app.directive('toolTip', [
      function() {
        return function(scope, element, attr) {
          var el, placement, tip, trigger, _ref, _ref1;
          tip = attr.toolTip;
          placement = (_ref = attr.placement) != null ? _ref : 'top';
          trigger = (_ref1 = attr.trigger) != null ? _ref1 : 'hover';
          el = $(element);
          return el.tooltip({
            placement: placement,
            trigger: trigger,
            title: tip
          });
        };
      }
    ]);
    app.directive('loadForm', [
      '$http', '$compile', '$timeout', function($http, $compile, $timeout) {
        return function(scope, element, attr) {
          var el, formName;
          formName = attr.loadForm;
          el = $(element);
          el.removeAttr('load-form');
          return $http.get("/admin/form?form=" + formName).success(function(formHtml) {
            var actionName, actionNames, actions, callbackName, submitAction;
            actions = formName.split('.');
            actionNames = [];
            $.each(actions, function(k, v) {
              return actionNames.push(v.toLowerCase().replace(/(?=\b)\w/g, function(e) {
                return e.toUpperCase();
              }));
            });
            actionName = actionNames.join('');
            el.html(formHtml);
            submitAction = "onSubmit" + actionName;
            if ($.isFunction(scope[submitAction])) {
              el.find('form').attr('ng-submit', "" + submitAction + "()");
            }
            $compile(el)(scope);
            callbackName = 'onLoad' + actionName;
            if ($.isFunction(scope[callbackName])) {
              return $timeout(function() {
                return scope[callbackName](el);
              }, 0);
            }
          });
        };
      }
    ]);
    return app;
  });

}).call(this);
